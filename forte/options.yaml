Driver:
  JOB_TYPE:
    type: str
    default: "NEWDRIVER"
    choices:
      ["NONE", "NEWDRIVER", "MR-DSRG-PT2", "CASSCF", "MCSCF_TWO_STEP", "TDCI"]
    help: "Specify the job type"
  SCF_TYPE:
    type: str
    default: "None"
    help: "The integrals used in the SCF calculation"
  REF_TYPE:
    type: str
    default: "SCF"
    choices: ["SCF", "CASSCF"]
    help: "The type of reference used by forte if a psi4 wave function is missing"
  DERTYPE:
    type: str
    default: "NONE"
    choices: ["NONE", "FIRST"]
    help: "Derivative order"
  E_CONVERGENCE:
    type: double
    default: 1.0e-9
    help: "The energy convergence criterion"
  D_CONVERGENCE:
    type: double
    default: 1.0e-6
    help: "The density convergence criterion"
  ACTIVE_SPACE_SOLVER:
    type: str
    default: ""
    choices:
      ["FCI", "GENCI", "ACI", "ASCI", "PCI", "DETCI", "CAS", "DMRG", "BLOCK2", "EXTERNAL"]
    help: "Active space solver type"
  CORRELATION_SOLVER:
    type: str
    default: "NONE"
    choices:
      [
        "DSRG-MRPT2",
        "THREE-DSRG-MRPT2",
        "DSRG-MRPT3",
        "MRDSRG",
        "SA-MRDSRG",
        "DSRG_MRPT",
        "MRDSRG_SO",
        "SOMRDSRG",
      ]
    help: "Dynamical correlation solver type"
  CALC_TYPE:
    type: str
    default: "SS"
    choices: ["SS", "SA", "MS", "DWMS"]
    help: "The type of computation"
  NEL:
    type: int
    default: None
    help: "The number of electrons. Used when reading from FCIDUMP files."
  CHARGE:
    type: int
    default: None
    help: "The charge of the molecule. If a value is provided it overrides the charge of Psi4."
  MULTIPLICITY:
    type: int
    default: None
    help: "The multiplicity = (2S + 1) of the electronic state. For example, 1 = singlet, 2 = doublet, 3 = triplet, ... If a value is provided it overrides the multiplicity of Psi4."
  ROOT_SYM:
    type: int
    default: None
    help: "The symmetry of the electronic state. (zero based)"
  ORBITAL_TYPE:
    type: str
    default: "CANONICAL"
    choices: ["CANONICAL", "LOCAL", "MP2NO", "MRPT2NO"]
    help: "Type of orbitals to use"
  MINAO_BASIS:
    type: str
    default: "STO-3G"
    help: "The basis used to define an orbital subspace"
  SUBSPACE:
    type: list
    default: []
    help: "A list of orbital subspaces"
  SUBSPACE_PI_PLANES:
    type: list
    default: []
    help: "A list of arrays of atoms composing the plane"
  MS:
    type: double
    default: None
    help: "Projection of spin onto the z axis"
  ACTIVE_REF_TYPE:
    type: str
    default: "CAS"
    choices: ["HF", "CAS", "GAS", "GAS_SINGLE", "CIS", "CID", "CISD", "DOCI"]
    help: "Initial guess for active space wave functions"
  WRITE_RDM:
    type: bool
    default: False
    help: "Save RDMs to ref_rdms.json for external computations"
  # TODO: Remove these in the future since they are redundant with READ/DUMP_ORBITALS (although they use different formats json vs. numpy)
  WRITE_WFN:
    type: bool
    default: False
    help: "Save ref_wfn.Ca() to coeff.json for external computations"
  READ_WFN:
    type: bool
    default: False
    help: "Read ref_wfn.Ca()/ref_wfn.Cb() from coeff.json for `external` active space solver"
  EXTERNAL_PARTIAL_RELAX:
    type: bool
    default: False
    help: "Perform one relaxation step after building the DSRG effective Hamiltonian when using `external` active space solver"
  EXT_RELAX_SOLVER:
    type: str
    default: "FCI"
    choices: ["FCI", "DETCI", "CAS"]
    help: "Active space solver used in the relaxation when using `external` active space solver"
  PRINT:
    type: int
    default: 2
    help: "Set the print level. (0 = quiet, 1 = brief, 2 = default, 3 = verbose, 4 = debug)"
  READ_ORBITALS:
    type: bool
    default: False
    help: "Read orbitals from file if true"
  DUMP_ORBITALS:
    type: bool
    default: False
    help: "Save orbitals to file if true"

AVAS:
  AVAS:
    type: bool
    default: false
    help: "Form AVAS orbitals?"
  AVAS_DIAGONALIZE:
    type: bool
    default: true
    help: "Diagonalize Socc and Svir?"
  AVAS_SIGMA:
    type: double
    default: 0.98
    help: "Cumulative cutoff to the eigenvalues of the overlap, which controls the size of the active space. This value is tested against (sum of active e.values) / (sum of total e.values)"
  AVAS_CUTOFF:
    type: double
    default: 1.0
    help: "The eigenvalues of the overlap greater than this cutoff will be considered as active. If not equal to 1.0, it takes priority over cumulative cutoff selection."
  AVAS_EVALS_THRESHOLD:
    type: double
    default: 1.0e-6
    help: "Threshold smaller than which is considered as zero for an eigenvalue of the projected overlap."
  AVAS_NUM_ACTIVE:
    type: int
    default: 0
    help: "The total number of active orbitals. If not equal to 0, it takes priority over threshold-based selections."
  AVAS_NUM_ACTIVE_OCC:
    type: int
    default: 0
    help: "The number of active occupied orbitals. If not equal to 0, it takes priority over cutoff-based selections and that based on the total number of active orbitals."
  AVAS_NUM_ACTIVE_VIR:
    type: int
    default: 0
    help: "The number of active virtual orbitals. If not equal to 0, it takes priority over cutoff-based selections and that based on the total number of active orbitals."

CINO:
  CINO:
    type: bool
    default: false
    help: "Do a CINO computation?"
  CINO_TYPE:
    type: str
    default: "CIS"
    choices: ["CIS", "CISD"]
    help: "The type of wave function."
  CINO_NROOT:
    type: int
    default: 1
    help: "The number of roots computed."
  CINO_ROOTS_PER_IRREP:
    type: int_list
    default: []
    help: "The number of excited states per irreducible representation."
  CINO_THRESHOLD:
    type: double
    default: 0.99
    help: "The fraction of NOs to include in the active space."
  CINO_AUTO:
    type: bool
    default: false
    help: "{ass frozen_docc, actice_docc, and restricted_docc?"

MRCINO:
  MRCINO:
    type: bool
    default: false
    help: "Do a MRCINO computation?"
  MRCINO_TYPE:
    type: str
    default: "CIS"
    choices: ["CIS", "CISD"]
    help: "The type of wave function."
  MRCINO_NROOT:
    type: int
    default: 1
    help: "The number of roots computed."
  MRCINO_ROOTS_PER_IRREP:
    type: int_list
    default: []
    help: "The number of excited states per irreducible representation."
  MRCINO_THRESHOLD:
    type: double
    default: 0.99
    help: "The fraction of NOs to include in the active space."
  MRCINO_AUTO:
    type: bool
    default: false
    help: "Allow the users to choose whether to pass frozen_docc, active_docc, and restricted_docc or not."

Embedding:
  EMBEDDING:
    type: bool
    default: false
    help: "Whether to perform embedding partition and projection."
  EMBEDDING_CUTOFF_METHOD:
    type: str
    default: "THRESHOLD"
    help: "Cut off by: threshold, cum_threshold, or num_of_orbitals."
  EMBEDDING_THRESHOLD:
    type: double
    default: 0.5
    help: "Projector eigenvalue threshold for both simple and cumulative threshold."
  NUM_A_DOCC:
    type: int
    default: 0
    help: "Number of occupied orbitals in A fixed to this value when embedding method is num_of_orbitals."
  Num_A_UOCC:
    type: int
    default: 0
    help: "Number of virtual orbitals in A fixed to this value when embedding method is num_of_orbitals."
  EMBEDDING_REFERENCE:
    type: str
    default: "CASSCF"
    help: "HF for any reference without active, CASSCF for any reference with an active space."
  EMBEDDING_SEMICANONICALIZE_ACTIVE:
    type: bool
    default: true
    help: "Perform semi-canonicalization on the active space or not."
  EMBEDDING_SEMICANONICALIZE_FROZEN:
    type: bool
    default: true
    help: "Perform semi-canonicalization on frozen core/virtual space or not."
  EMBEDDING_ADJUST_B_DOCC:
    type: int
    default: 0
    help: "Adjust the number of occupied orbitals between A and B, +: move to B, -: move to A."
  EMBEDDING_ADJUST_B_UOCC:
    type: int
    default: 0
    help: "Adjust the number of virtual orbitals between A and B, +: move to B, -: move to A."
  EMBEDDING_VIRTUAL_SPACE:
    type: str
    default: "ASET"
    choices: ["ASET", "PAO", "IAO"]
    help: "Virtual space scheme."
  PAO_THRESHOLD:
    type: double
    default: 1e-8
    help: "Virtual space truncation threshold for PAO."
  PAO_FIX_VIRTUAL_NUMBER:
    type: bool
    default: false
    help: "Enable this option to generate PAOs equivalent to ASET virtuals, instead of using threshold."

MO_Space_Info:
  FROZEN_DOCC:
    type: int_list
    default: []
    help: "Number of frozen occupied orbitals per irrep (in Cotton order)."
  RESTRICTED_DOCC:
    type: int_list
    default: []
    help: "Number of restricted doubly occupied orbitals per irrep (in Cotton order)."
  ACTIVE:
    type: int_list
    default: []
    help: "Number of active orbitals per irrep (in Cotton order)."
  RESTRICTED_UOCC:
    type: int_list
    default: []
    help: "Number of restricted unoccupied orbitals per irrep (in Cotton order)."
  FROZEN_UOCC:
    type: int_list
    default: []
    help: "Number of frozen unoccupied orbitals per irrep (in Cotton order)."
  GAS1:
    type: int_list
    default: []
    help: "Number of GAS1 orbitals per irrep (in Cotton order)."
  GAS2:
    type: int_list
    default: []
    help: "Number of GAS2 orbitals per irrep (in Cotton order)."
  GAS3:
    type: int_list
    default: []
    help: "Number of GAS3 orbitals per irrep (in Cotton order)."
  GAS4:
    type: int_list
    default: []
    help: "Number of GAS4 orbitals per irrep (in Cotton order)."
  GAS5:
    type: int_list
    default: []
    help: "Number of GAS5 orbitals per irrep (in Cotton order)."
  GAS6:
    type: int_list
    default: []
    help: "Number of GAS6 orbitals per irrep (in Cotton order)."
  ROTATE_MOS:
    type: int_list
    default: []
    help: "An array of MOs to swap in the format [irrep, mo_1, mo_2, irrep, mo_3, mo_4]. Irrep and MOs are all 1-based (NOT 0-based)!"

Active_Space_Solver:
  NROOT:
    type: int
    default: 1
    help: "The number of roots computed."
  ROOT:
    type: int
    default: 0
    help: "The root selected for state-specific computations."
  AVG_STATE:
    type: list
    default: []
    help: "A list of integer triplets that specify the irrep, multiplicity, and the number of states requested. Uses the format [[irrep1, multi1, nstates1], [irrep2, multi2, nstates2], ...]."
  AVG_WEIGHT:
    type: list
    default: []
    help: "A list of lists that specify the weights assigned to all the states requested with AVG_STATE. [[w1_1, w1_2, ..., w1_n], [w2_1, w2_2, ..., w2_n], ...]."
  S_TOLERANCE:
    type: double
    default: 0.25
    help: "The maximum deviation from the spin quantum number S tolerated."
  DUMP_ACTIVE_WFN:
    type: bool
    default: false
    help: "Save CI wave function of ActiveSpaceSolver to disk."
  READ_ACTIVE_WFN_GUESS:
    type: bool
    default: false
    help: "Read CI wave function of ActiveSpaceSolver from disk."
  TRANSITION_DIPOLES:
    type: bool
    default: false
    help: "Compute the transition dipole moments and oscillator strengths."
  PRINT_DIFFERENT_GAS_ONLY:
    type: bool
    default: false
    help: "Only calculate the transition dipole between states with different GAS occupations?"
  DUMP_TRANSITION_RDM:
    type: bool
    default: false
    help: "Dump transition reduced matrix into disk?"

PT2:
  PT2_MAX_MEM:
    type: double
    default: 1.0
    help: "Maximum size of the determinant hash (GB)"

PCI:
  PCI_GENERATOR:
    type: str
    default: "WALL-CHEBYSHEV"
    choices:
      [
        "LINEAR",
        "QUADRATIC",
        "CUBIC",
        "QUARTIC",
        "POWER",
        "TROTTER",
        "OLSEN",
        "DAVIDSON",
        "MITRUSHENKOV",
        "EXP-CHEBYSHEV",
        "WALL-CHEBYSHEV",
        "CHEBYSHEV",
        "LANCZOS",
        "DL",
      ]
    help: "The propagation algorithm."
  PCI_NROOT:
    type: int
    default: 1
    help: "The number of roots computed."
  PCI_SPAWNING_THRESHOLD:
    type: double
    default: 0.001
    help: "The determinant importance threshold."
  PCI_MAX_GUESS_SIZE:
    type: int
    default: 10000
    help: "The maximum number of determinants used to form the guess wave function."
  PCI_GUESS_SPAWNING_THRESHOLD:
    type: double
    default: -1
    help: "The determinant importance threshold for guess spawning."
  PCI_ENERGY_ESTIMATE_THRESHOLD:
    type: double
    default: 1.0e-6
    help: "The threshold with which we estimate the variational energy. Note that the final energy is always estimated exactly."
  PCI_TAU:
    type: double
    default: 1.0
    help: "The time step in imaginary time (a.u.)."
  PCI_E_CONVERGENCE:
    type: double
    default: 1.0e-8
    help: "The energy convergence criterion."
  PCI_R_CONVERGENCE:
    type: double
    default: 1.0
    help: "The residual 2-norm convergence criterion."
  PCI_FAST_EVAR:
    type: bool
    default: false
    help: "Use a fast (sparse) estimate of the energy?"
  PCI_EVAR_MAX_ERROR:
    type: double
    default: 0.0
    help: "The max allowed error for variational energy."
  PCI_ENERGY_ESTIMATE_FREQ:
    type: int
    default: 1
    help: "Iterations in between variational estimation of the energy."
  PCI_ADAPTIVE_BETA:
    type: bool
    default: false
    help: "Use an adaptive time step?"
  PCI_USE_INTER_NORM:
    type: bool
    default: false
    help: "Use intermediate normalization?"
  PCI_USE_SHIFT:
    type: bool
    default: false
    help: "Use a shift in the exponential?"
  PCI_VAR_ESTIMATE:
    type: bool
    default: false
    help: "Estimate variational energy during calculation?"
  PCI_PRINT_FULL_WAVEFUNCTION:
    type: bool
    default: false
    help: "Print full wavefunction when finished?"
  PCI_SIMPLE_PRESCREENING:
    type: bool
    default: false
    help: "Prescreen the spawning of excitations?"
  PCI_DYNAMIC_PRESCREENING:
    type: bool
    default: false
    help: "Use dynamic prescreening?"
  PCI_SCHWARZ_PRESCREENING:
    type: bool
    default: false
    help: "Use Schwarz prescreening?"
  PCI_INITIATOR_APPROX:
    type: bool
    default: false
    help: "Use initiator approximation?"
  PCI_INITIATOR_APPROX_FACTOR:
    type: double
    default: 1.0
    help: "The initiator approximation factor."
  PCI_PERTURB_ANALYSIS:
    type: bool
    default: false
    help: "Do result perturbation analysis?"
  PCI_SYMM_APPROX_H:
    type: bool
    default: false
    help: "Use Symmetric Approximate Hamiltonian?"
  PCI_STOP_HIGHER_NEW_LOW:
    type: bool
    default: false
    help: "Stop iteration when higher new low detected?"
  PCI_MAXBETA:
    type: double
    default: 1000.0
    help: "The maximum value of beta."
  PCI_MAX_DAVIDSON_ITER:
    type: int
    default: 12
    help: "The maximum value of Davidson generator iteration."
  PCI_DL_COLLAPSE_PER_ROOT:
    type: int
    default: 2
    help: "The number of trial vector to retain after Davidson-Liu collapsing."
  PCI_DL_SUBSPACE_PER_ROOT:
    type: int
    default: 8
    help: "The maxim number of trial Davidson-Liu vectors."
  PCI_CHEBYSHEV_ORDER:
    type: int
    default: 5
    help: "The order of Chebyshev truncation."
  PCI_KRYLOV_ORDER:
    type: int
    default: 5
    help: "The order of Krylov truncation."
  PCI_COLINEAR_THRESHOLD:
    type: double
    default: 1.0e-6
    help: "The minimum norm of orthogonal vector."
  PCI_REFERENCE_SPAWNING:
    type: bool
    default: false
    help: "Do spawning according to reference?"
  PCI_POST_DIAGONALIZE:
    type: bool
    default: false
    help: "Do a final diagonalization after convergence?"
  PCI_FUNCTIONAL:
    type: str
    default: "MAX"
    choices: ["MAX", "SUM", "SQUARE", "SQRT", "SPECIFY-ORDER"]
    help: "The functional for determinant coupling importance evaluation."
  PCI_FUNCTIONAL_ORDER:
    type: double
    default: 1.0
    help: "The functional order of PCI_FUNCTIONAL is SPECIFY-ORDER."

FCI:
  FCI_TEST_RDMS:
    type: bool
    default: false
    help: "Test the FCI reduced density matrices?"
  PRINT_NO:
    type: bool
    default: false
    help: "Print the natural orbitals from the reduced density matrices of FCI."
  CI_SPIN_ADAPT:
    type: bool
    default: false
    help: "Spin-adapt the CI wavefunction?"
  CI_SPIN_ADAPT_FULL_PRECONDITIONER:
    type: bool
    default: false
    help: "Use a full preconditioner for spin-adapted CI?"

SCI:
  SCI_ENFORCE_SPIN_COMPLETE:
    type: bool
    default: true
    help: "Enforce determinant spaces (P and Q) to be spin-complete?"
  SCI_ENFORCE_SPIN_COMPLETE_P:
    type: bool
    default: false
    help: "Enforce determinant space P to be spin-complete?"
  SCI_PROJECT_OUT_SPIN_CONTAMINANTS:
    type: bool
    default: true
    help: "Project out spin contaminants in Davidson-Liu's algorithm?"
  SCI_EXCITED_ALGORITHM:
    type: str
    default: "NONE"
    choices: ["AVERAGE", "ROOT_ORTHOGONALIZE", "ROOT_COMBINE", "MULTISTATE"]
    help: "The selected CI excited state algorithm."
  SCI_MAX_CYCLE:
    type: int
    default: 20
    help: "Maximum number of cycles."
  SCI_QUIET_MODE:
    type: bool
    default: false
    help: "Print during ACI procedure?"
  SCI_PREITERATIONS:
    type: int
    default: 0
    help: "Number of iterations to run SA-ACI before SS-ACI."
  SCI_DIRECT_RDMS:
    type: bool
    default: false
    help: "Compute RDMs without coupling lists?"
  SCI_SAVE_FINAL_WFN:
    type: bool
    default: false
    help: "Save final wavefunction to file?"
  SCI_TEST_RDMS:
    type: bool
    default: false
    help: "Run tests for the RDMs?"
  SCI_FIRST_ITER_ROOTS:
    type: bool
    default: false
    help: "Compute all roots on the first iteration?"
  SCI_CORE_EX:
    type: bool
    default: false
    help: "Use core excitation algorithm?"

ACI:
  ACI_CONVERGENCE:
    type: double
    default: 1.0e-9
    help: "ACI Convergence threshold."
  ACI_SCREEN_ALG:
    type: str
    default: "AVERAGE"
    choices:
      [
        "AVERAGE",
        "SR",
        "RESTRICTED",
        "CORE",
        "BATCH_HASH",
        "BATCH_VEC",
        "MULTI_GAS",
      ]
    help: "The screening algorithm to use."
  SIGMA:
    type: double
    default: 0.01
    help: "The energy selection threshold for the P space."
  GAMMA:
    type: double
    default: 1.0
    help: "The threshold for the selection of the Q space."
  ACI_PRESCREEN_THRESHOLD:
    type: double
    default: 1.0e-12
    help: "The SD space prescreening threshold."
  ACI_PQ_FUNCTION:
    type: str
    default: "AVERAGE"
    choices: ["AVERAGE", "MAX"]
    help: "Function of q-space criteria, per root for SA-ACI."
  ACI_SPIN_PROJECTION:
    type: int
    default: 0
    help: "Type of spin projection (0 - None, 1 - Project initial P spaces, 2 - Project only after converged PQ space, 3 - Do 1 and 2)."
  SPIN_PROJECT_FULL:
    type: bool
    default: false
    help: "Project solution in full diagonalization algorithm?"
  ACI_ADD_AIMED_DEGENERATE:
    type: bool
    default: true
    help: "Add degenerate determinants not included in the aimed selection."
  ACI_N_AVERAGE:
    type: int
    default: 0
    help: "Number of roots to average. When set to zero (default), it averages over all roots."
  ACI_AVERAGE_OFFSET:
    type: int
    default: 0
    help: "Offset for state averaging."
  ACI_PRINT_REFS:
    type: bool
    default: false
    help: "Print the P space?"
  ACI_NO_THRESHOLD:
    type: double
    default: 0.02
    help: "Threshold for active space prediction."
  ACI_SPIN_TOL:
    type: double
    default: 0.02
    help: "Tolerance for S^2 value."
  ACI_APPROXIMATE_RDM:
    type: bool
    default: false
    help: "Approximate the RDMs?"
  ACI_PRINT_WEIGHTS:
    type: bool
    default: false
    help: "Print weights for active space prediction?"
  ACI_PRINT_NO:
    type: bool
    default: true
    help: "Print the natural orbitals?"
  ACI_NO:
    type: bool
    default: false
    help: "Computes ACI natural orbitals?"
  FULL_MRPT2:
    type: bool
    default: false
    help: "Compute full PT2 energy?"
  UNPAIRED_DENSITY:
    type: bool
    default: false
    help: "Compute unpaired electron density?"
  ACI_LOW_MEM_SCREENING:
    type: bool
    default: false
    help: "Use low-memory screening algorithm?"
  ACI_REF_RELAX:
    type: bool
    default: false
    help: "Do reference relaxation in ACI?"
  ACI_NFROZEN_CORE:
    type: int
    default: 0
    help: "Number of orbitals to freeze for core excitations."
  ACI_ROOTS_PER_CORE:
    type: int
    default: 1
    help: "Number of roots to compute per frozen orbital."
  SPIN_ANALYSIS:
    type: bool
    default: false
    help: "Do spin correlation analysis?"
  SPIN_TEST:
    type: bool
    default: false
    help: "Test validity of correlation analysis."
  ACI_RELAXED_SPIN:
    type: bool
    default: false
    help: "Do spin correlation analysis for relaxed wave function?"
  PRINT_IAOS:
    type: bool
    default: true
    help: "Print IAOs?"
  PI_ACTIVE_SPACE:
    type: bool
    default: false
    help: "Active space type?"
  SPIN_MAT_TO_FILE:
    type: bool
    default: false
    help: "Save spin correlation matrix to file?"
  SPIN_BASIS:
    type: str
    default: "LOCAL"
    choices: ["LOCAL", "IAO", "NO", "CANONICAL"]
    help: "Basis for spin analysis."
  ACI_RELAX_SIGMA:
    type: double
    default: 0.01
    help: "Sigma for reference relaxation."
  ACI_NBATCH:
    type: int
    default: 0
    help: "Number of batches in screening."
  ACI_MAX_MEM:
    type: int
    default: 1000
    help: "Sets max memory for batching algorithm (MB)."
  ACI_SCALE_SIGMA:
    type: double
    default: 0.5
    help: "Scales sigma in batched algorithm."
  ACTIVE_GUESS_SIZE:
    type: int
    default: 1000
    help: "Number of determinants for CI guess."
  DIAG_ALGORITHM:
    type: str
    default: "SPARSE"
    choices: ["DYNAMIC", "FULL", "SPARSE"]
    help: "The diagonalization method."
  FORCE_DIAG_METHOD:
    type: bool
    default: false
    help: "Force the diagonalization procedure?"
  ONE_CYCLE:
    type: bool
    default: false
    help: "Doing only one cycle of ACI (FCI) ACI iteration?"
  OCC_ANALYSIS:
    type: bool
    default: false
    help: "Doing post-calculation occupation analysis?"
  OCC_LIMIT:
    type: double
    default: 0.0001
    help: "Occupation limit for considering if an orbital is occupied/unoccupied in the post-calculation analysis."
  CORR_LIMIT:
    type: double
    default: -0.01
    help: "Correlation limit for considering if two orbitals are correlated in the post-calculation analysis."

Davidson-Liu:
  DL_MAXITER:
    type: int
    default: 100
    help: "The maximum number of Davidson-Liu iterations."
  DL_DETS_PER_GUESS:
    type: int
    default: 50
    help: "The number of determinants to use for each guess state."
  DL_GUESS_PER_ROOT:
    type: int
    default: 1
    help: "The number of trial vectors per target root."
  DL_COLLAPSE_PER_ROOT:
    type: int
    default: 2
    help: "The number of trial vectors to retain after collapsing."
  DL_SUBSPACE_PER_ROOT:
    type: int
    default: 10
    help: "The maximum number of trial vectors."
  SIGMA_VECTOR_MAX_MEMORY:
    type: int
    default: 67108864
    help: "The maximum number of doubles stored in memory in the sigma vector algorithm."

ASCI:
  ASCI_E_CONVERGENCE:
    type: double
    default: 1e-5
    help: "ASCI energy convergence threshold."
  ASCI_TDET:
    type: int
    default: 2000
    help: "ASCI Max det."
  ASCI_CDET:
    type: int
    default: 200
    help: "ASCI Max reference det."
  ASCI_PRESCREEN_THRESHOLD:
    type: double
    default: 1e-12
    help: "ASCI prescreening threshold."

TDCI:
  TDCI_HOLE:
    type: int
    default: 0
    help: "Orbital used to ionize initial state. Number is indexed by the same ordering of orbitals in the determinants."
  TDCI_PROPAGATOR:
    type: str
    default: "EXACT"
    choices:
      [
        "EXACT",
        "CN",
        "QCN",
        "LINEAR",
        "QUADRATIC",
        "RK4",
        "LANCZOS",
        "EXACT_SELECT",
        "RK4_SELECT",
        "RK4_SELECT_LIST",
        "ALL",
      ]
    help: "Type of propagator."
  TDCI_NSTEP:
    type: int
    default: 20
    help: "Number of time-steps."
  TDCI_TIMESTEP:
    type: double
    default: 1.0
    help: "Timestep length in attosecond."
  TDCI_CN_CONVERGENCE:
    type: double
    default: 1e-12
    help: "Convergence threshold for CN iterations."
  TDCI_PRINT_WFN:
    type: bool
    default: False
    help: "Print coefficients to files."
  TDCI_OCC_ORB:
    type: int_list
    default: []
    help: "Print the occupation at integral time intervals for these orbitals."
  TDCI_KRYLOV_DIM:
    type: int
    default: 5
    help: "Dimension of Krylov subspace for Lanczos method."
  TDCI_ETA_P:
    type: double
    default: 1e-12
    help: "Path filtering threshold for P space."
  TDCI_ETA_PQ:
    type: double
    default: 1e-12
    help: "Path filtering threshold for Q space."
  TDCI_PRESCREEN_THRESH:
    type: double
    default: 1e-12
    help: "Prescreening threshold."
  TDCI_TEST_OCC:
    type: bool
    default: False
    help: "Test the occupation vectors."

FCIMO:
  FCIMO_ACTV_TYPE:
    type: str
    default: "COMPLETE"
    choices: ["COMPLETE", "CIS", "CISD", "DOCI"]
    help: "The active space type."
  FCIMO_CISD_NOHF:
    type: bool
    default: True
    help: "Ground state: HF; Excited states: no HF determinant in CISD space."
  FCIMO_IPEA:
    type: str
    default: "NONE"
    choices: ["NONE", "IP", "EA"]
    help: "Generate IP/EA CIS/CISD space."
  FCIMO_PRINT_CIVEC:
    type: double
    default: 0.05
    help: "The printing threshold for CI vectors."
  # FCIMO_IAO_ANALYSIS:
  #   type: bool
  #   default: False
  #   help: "Intrinsic atomic orbital analysis."

DETCI:
  DETCI_PRINT_CIVEC:
    type: double
    default: 0.05
    help: "The printing threshold for CI vectors."
  DETCI_CISD_NO_HF:
    type: bool
    default: False
    help: "Exclude HF determinant in active CID/CISD space."

Integrals:
  INT_TYPE:
    type: str
    default: "CONVENTIONAL"
    help: >
      "The type of molecular integrals used in a computation"
      "- CONVENTIONAL: Conventional four-index two-electron integrals"
      "- DF: Density fitted two-electron integrals"
      "- CHOLESKY: Cholesky decomposed two-electron integrals"
      "- FCIDUMP: Read integrals from a file in the FCIDUMP format"
  FCIDUMP_FILE:
    type: str
    default: "INTDUMP"
    help: "The file that stores the FCIDUMP integrals"
  FCIDUMP_DOCC:
    type: int_list
    default: []
    help: >
      "The number of doubly occupied orbitals assumed for a FCIDUMP file."
      " This information is used to build orbital energies."
  FCIDUMP_SOCC:
    type: int_list
    default: []
    help: >
      "The number of singly occupied orbitals assumed for a FCIDUMP file."
      " This information is used to build orbital energies."
  PRINT_INTS:
    type: bool
    default: False
    help: "Print the one- and two-electron integrals?"

DSRG:
  DSRG_S:
    type: double
    default: 0.5
    help: "The value of the DSRG flow parameter s"
  DSRG_POWER:
    type: double
    default: 2.0
    help: "The power of the parameter s in the regularizer"
  CORR_LEVEL:
    type: str
    default: "PT2"
    help: >
      "Correlation level of MR-DSRG (used in mrdsrg code, "
      "LDSRG2_P3 and QDSRG2_P3 not implemented)"
  SOURCE:
    type: str
    default: "STANDARD"
    help: >
      "Source operator used in DSRG (AMP, EMP2, LAMP, LEMP2 "
      "only available in toy code mcsrgpt2)"
  DSRG_RSC_NCOMM:
    type: int
    default: 20
    help: >
      "The maximum number of commutators in the recursive single commutator approximation"
  DSRG_RSC_THRESHOLD:
    type: double
    default: 1.0e-12
    help: "The threshold for terminating the recursive single commutator approximation"
  T_ALGORITHM:
    type: str
    default: "DSRG"
    help: >
      "The way of forming T amplitudes (DSRG_NOSEMI, SELEC, ISA "
      "only available in toy code mcsrgpt2)"
  DSRG_PT2_H0TH:
    type: str
    default: "FDIAG"
    help: "Different Zeroth-order Hamiltonian of DSRG-MRPT (used in mrdsrg code)"
  DSRG_DIPOLE:
    type: bool
    default: False
    help: "Compute (if true) DSRG dipole moments"
  DSRG_MAX_DIPOLE_LEVEL:
    type: int
    default: 0
    help: "The max body level of DSRG transformed dipole moment (skip if < 1)"
  DSRG_MAX_QUADRUPOLE_LEVEL:
    type: int
    default: 0
    help: "The max body level of DSRG transformed quadrupole moment (skip if < 1)"
  DSRG_MAXITER:
    type: int
    default: 50
    help: "Max iterations for nonperturbative MR-DSRG amplitudes update"
  R_CONVERGENCE:
    type: double
    default: 1.0e-6
    help: "Residue convergence criteria for amplitudes"
  RELAX_REF:
    type: str
    default: "NONE"
    help: "Relax the reference for MR-DSRG"
  MAXITER_RELAX_REF:
    type: int
    default: 15
    help: "Max macro iterations for DSRG reference relaxation"
  RELAX_E_CONVERGENCE:
    type: double
    default: 1.0e-8
    help: "The energy relaxation convergence criterion"
  DSRG_DUMP_RELAXED_ENERGIES:
    type: bool
    default: False
    help: "Dump the energies after each reference relaxation step to JSON."
  TAYLOR_THRESHOLD:
    type: int
    default: 3
    help: "DSRG Taylor expansion threshold for small denominator"
  NTAMP:
    type: int
    default: 15
    help: "Number of largest amplitudes printed in the summary"
  INTRUDER_TAMP:
    type: double
    default: 0.10
    help: "Threshold for amplitudes considered as intruders for printing"
  DSRG_TRANS_TYPE:
    type: str
    default: "UNITARY"
    choices: ["UNITARY", "CC"]
    help: "DSRG transformation type"
  SMART_DSRG_S:
    type: str
    default: "DSRG_S"
    help: "Automatically adjust the flow parameter according to denominators"
  PRINT_TIME_PROFILE:
    type: bool
    default: False
    help: "Print detailed timings in dsrg-mrpt3"
  DSRG_MULTI_STATE:
    type: str
    default: "SA_FULL"
    help: >
      "Multi-state DSRG options (MS and XMS recouple states after single-state computations)\n"
      "  - State-average approach\n"
      "    - SA_SUB:  form H_MN = <M|Hbar|N>; M, N are CAS states of interest\n"
      "    - SA_FULL: redo a CASCI\n"
      "  - Multi-state approach (currently only for MRPT2)\n"
      "    - MS:  form 2nd-order Heff_MN = <M|H|N> + 0.5 * [<M|(T_M)^+ H|N> + <M|H T_N|N>]\n"
      "    - XMS: rotate references such that <M|F|N> is diagonal before MS procedure"
  FORM_HBAR3:
    type: bool
    default: False
    help: "Form 3-body Hbar (only used in dsrg-mrpt2 with SA_SUB for testing)"
  FORM_MBAR3:
    type: bool
    default: False
    help: "Form 3-body mbar (only used in dsrg-mrpt2 for testing)"
  DSRGPT:
    type: bool
    default: True
    help: "Renormalize (if true) the integrals for purturbitive calculation (only in toy code mcsrgpt2)"
  INTERNAL_AMP:
    type: str
    default: "NONE"
    help: "Include internal amplitudes for VCIS/VCISD-DSRG acording to excitation level"
  INTERNAL_AMP_SELECT:
    type: str
    default: "AUTO"
    help: >
      "Excitation types considered when internal amplitudes are included\n"
      "- Select only part of the asked internal amplitudes (IAs) in V-CIS/CISD\n"
      "  - AUTO: all IAs that changes excitations (O->V; OO->VV, OO->OV, OV->VV)\n"
      "  - ALL:  all IAs (O->O, V->V, O->V; OO->OO, OV->OV, VV->VV, OO->VV, OO->OV, OV->VV)\n"
      "  - OOVV: pure external (O->V; OO->VV)"
  T1_AMP:
    type: str
    default: "DSRG"
    help: "The way of forming T1 amplitudes (only in toy code mcsrgpt2)"
  ISA_B:
    type: double
    default: 0.02
    help: >
      "Intruder state avoidance parameter when use ISA to"
      " form amplitudes (only in toy code mcsrgpt2)"
  CCVV_SOURCE:
    type: str
    default: "NORMAL"
    help: "Definition of source operator: special treatment for the CCVV term"
  CCVV_ALGORITHM:
    type: str
    default: "FLY_AMBIT"
    help: "Algorithm to compute the CCVV term in DSRG-MRPT2 (only in three-dsrg-mrpt2 code)"
  AO_DSRG_MRPT2:
    type: bool
    default: False
    help: "Do AO-DSRG-MRPT2 if true (not available)"
  CCVV_BATCH_NUMBER:
    type: int
    default: -1
    help: "Batches for CCVV_ALGORITHM"
  DSRG_MRPT2_DEBUG:
    type: bool
    default: False
    help: "Excssive printing for three-dsrg-mrpt2"
  THREEPDC_ALGORITHM:
    type: str
    default: "CORE"
    help: "Algorithm for evaluating 3-body cumulants in three-dsrg-mrpt2"
  THREE_MRPT2_TIMINGS:
    type: bool
    default: False
    help: "Detailed printing (if true) in three-dsrg-mrpt2"
  PRINT_DENOM2:
    type: bool
    default: False
    help: "Print (if true) (1 - exp(-2*s*D)) / D, renormalized denominators in DSRG-MRPT2"
  DSRG_HBAR_SEQ:
    type: bool
    default: False
    help: "Evaluate H_bar sequentially if true"
  DSRG_NIVO:
    type: bool
    default: False
    help: "NIVO approximation: Omit tensor blocks with >= 3 virtual indices if true"
  PRINT_1BODY_EVALS:
    type: bool
    default: False
    help: "Print eigenvalues of 1-body effective H"
  DSRG_MRPT3_BATCHED:
    type: bool
    default: False
    help: "Force running the DSRG-MRPT3 code using the batched algorithm"
  IGNORE_MEMORY_ERRORS:
    type: bool
    default: False
    help: "Continue running DSRG-MRPT3 even if memory exceeds"
  DSRG_DIIS_START:
    type: int
    default: 2
    help: "Iteration cycle to start adding error vectors for DSRG DIIS (< 1 for not doing DIIS)"
  DSRG_DIIS_FREQ:
    type: int
    default: 1
    help: "Frequency of extrapolating error vectors for DSRG DIIS"
  DSRG_DIIS_MIN_VEC:
    type: int
    default: 3
    help: "Minimum size of DIIS vectors"
  DSRG_DIIS_MAX_VEC:
    type: int
    default: 8
    help: "Maximum size of DIIS vectors"
  DSRG_RESTART_AMPS:
    type: bool
    default: True
    help: "Restart DSRG amplitudes from a previous step"
  DSRG_READ_AMPS:
    type: bool
    default: false
    help: "Read initial amplitudes from the current directory"
  DSRG_DUMP_AMPS:
    type: bool
    default: false
    help: "Dump converged amplitudes to the current directory"
  DSRG_T1_AMPS_GUESS:
    type: str
    default: "PT2"
    choices: ["PT2", "ZERO"]
    help: "The initial guess of T1 amplitudes for nonperturbative DSRG methods"
  DSRG_3RDM_ALGORITHM:
    type: str
    default: "EXPLICIT"
    choices: ["EXPLICIT", "DIRECT"]
    help: "Algorithm to compute 3-RDM contributions in fully contracted [H2, T2]"
  DSRG_RDM_MS_AVG:
    type: bool
    default: false
    help: "Form Ms-averaged density if true"
  SAVE_SA_DSRG_INTS:
    type: bool
    default: false
    help: "Save SA-DSRG dressed integrals to dsrg_ints.json"

DWMS:
  DWMS_ZETA:
    type: double
    default: 0.0
    help: >
      Automatic Gaussian width cutoff for the density weights
      Weights of state α:
      Wi = exp(-ζ * (Eα - Ei)^2) / sum_j exp(-ζ * (Eα - Ej)^2)
      Energies (Eα, Ei, Ej) can be CASCI or SA-DSRG-PT2/3 energies.
  DWMS_CORRLV:
    type: str
    default: "PT2"
    choices: ["PT2", "PT3"]
    help: "DWMS-DSRG-PT level"
  DWMS_REFERENCE:
    type: str
    default: "CASCI"
    choices: ["CASCI", "PT2", "PT3", "PT2D"]
    help: >
      Energies to compute dynamic weights and CI vectors to do multi-state
      CAS: CASCI energies and CI vectors
      PT2: SA-DSRG-PT2 energies and SA-DSRG-PT2/CASCI vectors
      PT3: SA-DSRG-PT3 energies and SA-DSRG-PT3/CASCI vectors
      PT2D: Diagonal SA-DSRG-PT2c effective Hamiltonian elements and original CASCI vectors
  DWMS_ALGORITHM:
    type: str
    default: "SA"
    choices: ["MS", "XMS", "SA", "XSA", "SH-0", "SH-1"]
    help: >
      DWMS algorithms:
      - SA: state average Hαβ = 0.5 * ( <α|Hbar(β)|β> + <β|Hbar(α)|α> )
      - XSA: extended state average (rotate Fαβ to a diagonal form)
      - MS: multi-state (single-state single-reference)
      - XMS: extended multi-state (single-state single-reference)
      - To Be Deprecated:
        - SH-0: separated diagonalizations, non-orthogonal final solutions
        - SH-1: separated diagonalizations, orthogonal final solutions
  DWMS_DELTA_AMP:
    type: bool
    default: false
    help: >
      Consider (if true) amplitudes difference between states
      X(αβ) = A(β) - A(α) in SA algorithm, testing in non-DF DSRG-MRPT2
  DWMS_ITERATE:
    type: bool
    default: false
    help: >
      Iterative update the reference CI coefficients in SA algorithm, testing in non-DF DSRG-MRPT2
  DWMS_MAXITER:
    type: int
    default: 10
    help: >
      Max number of iteration in the update of the reference
      CI coefficients in SA algorithm, testing in non-DF DSRG-MRPT2
  DWMS_E_CONVERGENCE:
    type: double
    default: 1.0e-7
    help: "Energy convergence criteria for DWMS iteration"

Localize:
  LOCALIZE:
    type: str
    default: "PIPEK_MEZEY"
    choices: ["PIPEK_MEZEY", "BOYS"]
    help: "The method used to localize the orbitals"
  LOCALIZE_SPACE:
    type: int_list
    default: []
    help: "Sets the orbital space for localization"

MCSCF:
  MCSCF_MAXITER:
    type: int
    default: 100
    help: "The maximum number of MCSCF macro iterations"
  MCSCF_E_CONVERGENCE:
    type: double
    default: 1e-8
    help: "The energy convergence criterion (two consecutive energies)"
  MCSCF_G_CONVERGENCE:
    type: double
    default: 1e-7
    help: "The orbital gradient convergence criterion (RMS of gradient vector)"
  MCSCF_MICRO_MAXITER:
    type: int
    default: 6
    help: "The maximum number of micro iterations (orbital optimization) for a given CI"
  MCSCF_MCI_MAXITER:
    type: int
    default: 12
    help: "The maximum number of micro CI iterations in every macro iteration"
  MCSCF_DIIS_MIN_VEC:
    type: int
    default: 3
    help: "Minimum size of DIIS vectors for orbital rotations"
  MCSCF_DIIS_MAX_VEC:
    type: int
    default: 8
    help: "Maximum size of DIIS vectors for orbital rotations"
  MCSCF_DIIS_START:
    type: int
    default: 15
    help: "Iteration number to start adding error vectors (< 1 will not do DIIS)"
  MCSCF_DIIS_FREQ:
    type: int
    default: 1
    help: "How often to do DIIS extrapolation"
  MCSCF_NO_ORBOPT:
    type: bool
    default: False
    help: "No orbital optimization if true"
  MCSCF_FINAL_ORBITAL:
    type: str
    default: "CANONICAL"
    choices: ["CANONICAL", "NATURAL", "UNSPECIFIED"]
    help: "Constraints for redundant orbital pairs at the end of macro iteration"
  MCSCF_MAX_ROTATION:
    type: double
    default: 0.2
    help: "Max value in orbital update vector"
  MCSCF_ORB_ORTHO_TRANS:
    type: str
    default: "CAYLEY"
    choices: ["CAYLEY", "POWER", "PADE"]
    help: "Ways to compute the orthogonal transformation U from orbital rotation R"
  MCSCF_DIE_IF_NOT_CONVERGED:
    type: bool
    default: True
    help: "Stop Forte if MCSCF is not converged"
  MCSCF_DEBUG_PRINTING:
    type: bool
    default: False
    help: "Enable debug printing if True"
  MCSCF_INTERNAL_ROT:
    type: bool
    default: False
    help: "Keep GASn-GASn orbital rotations if true"
  MCSCF_ZERO_ROT:
    type: list
    default: []
    help: "Zero mixing for orbital pairs"
  CPSCF_MAXITER:
    type: int
    default: 50
    help: "Max iteration of solving coupled perturbed SCF equation"
  CPSCF_CONVERGENCE:
    type: double
    default: 1e-8
    help: "Convergence criterion for CP-SCF equation"
  MCSCF_CI_FREQ:
    type: int
    default: 1
    help: "How often to solve CI?\n< 1: do CI in the first macro iteration ONLY\n= n: do CI every n macro iteration"
  MCSCF_REFERENCE:
    type: bool
    default: True
    help: "Run a FCI followed by MCSCF computation?"
  MCSCF_FREEZE_CORE:
    type: bool
    default: False
    help: "Freeze core orbitals in MCSCF?"
  MCSCF_MULTIPLICITY:
    type: int
    default: 0
    help: "Multiplicity for the CASSCF solution (if different from multiplicity)"
  MCSCF_SOSCF:
    type: bool
    default: False
    help: "Run a complete SOSCF (form full Hessian)?"
  OPTIMIZE_FROZEN_CORE:
    type: bool
    default: False
    help: "Ignore frozen core option and optimize orbitals?"
  RESTRICTED_DOCC_JK:
    type: bool
    default: True
    help: "Use JK builder for restricted docc (EXPERT)?"
  ORB_ROTATION_ALGORITHM:
    type: str
    default: "DIAGONAL"
    choices: ["DIAGONAL", "AUGMENTED_HESSIAN"]
    help: "Orbital rotation algorithm"
  MCSCF_DO_DIIS:
    type: bool
    default: True
    help: "Use DIIS in MCSCF orbital optimization"
  MCSCF_DIIS_NORM:
    type: double
    default: 1e-3
    help: "Do DIIS when the orbital gradient norm is below this value"
  MCSCF_CI_STEP:
    type: bool
    default: False
    help: "Do a CI step for every MCSCF_CI_FREQ"
  MCSCF_CI_STEP_START:
    type: int
    default: -1
    help: "When to start skipping CI steps"
  MONITOR_SA_SOLUTION:
    type: bool
    default: False
    help: "Monitor the MC-CI solutions through iterations"
  MCSCF_ACTIVE_FROZEN_ORBITAL:
    type: int_list
    default: []
    help: "A list of active orbitals to be frozen in the MCSCF optimization (in Pitzer order, zero based). Useful when doing core-excited state computations."

Old:
  NAT_ORBS_PRINT:
    type: bool
    default: False
    help: "View the natural orbitals with their symmetry information"
  NAT_ACT:
    type: bool
    default: False
    help: "Use Natural Orbitals to suggest active space?"
  PT2NO_OCC_THRESHOLD:
    type: double
    default: 0.98
    help: "Occupancy smaller than which is considered as active"
  PT2NO_VIR_THRESHOLD:
    type: double
    default: 0.02
    help: "Occupancy greater than which is considered as active"
  MEMORY_SUMMARY:
    type: bool
    default: False
    help: "Print summary of memory"
  REFERENCE:
    type: str
    default: ""
    help: "The SCF refernce type"
  DIIS_MAX_VECS:
    type: int
    default: 5
    help: "The maximum number of DIIS vectors"
  DIIS_MIN_VECS:
    type: int
    default: 2
    help: "The minimum number of DIIS vectors"
  MAXITER:
    type: int
    default: 100
    help: "The maximum number of iterations"
  USE_DMRGSCF:
    type: bool
    default: False
    help: "Use the older DMRGSCF algorithm?"
  SEMI_CANONICAL:
    type: bool
    default: True
    help: "Semicanonicalize orbitals for each elementary orbital space"
  SEMI_CANONICAL_MIX_INACTIVE:
    type: bool
    default: False
    help: "Treat frozen and restricted orbitals together for semi-canonicalization"
  SEMI_CANONICAL_MIX_ACTIVE:
    type: bool
    default: False
    help: "Treat all GAS orbitals together for semi-canonicalization"
  TWOPDC:
    type: str
    default: "MK"
    choices: ["MK", "ZERO"]
    help: "The form of the two-particle density cumulant"
  THREEPDC:
    type: str
    default: "MK"
    choices: ["MK", "MK_DECOMP", "ZERO"]
    help: "The form of the three-particle density cumulant"
  SRG_COMM:
    type: str
    default: "STANDARD"
    choices: ["STANDARD", "FO", "FO2"]
    help: "Select a modified commutator"
  SRG_DT:
    type: double
    default: 0.001
    help: "The initial time step used by the ode solver"
  SRG_ODEINT_ABSERR:
    type: double
    default: 1.0e-12
    help: "The absolute error tollerance for the ode solver"
  SRG_ODEINT_RELERR:
    type: double
    default: 1.0e-12
    help: "The absolute error tollerance for the ode solver"
  SRG_ODEINT:
    type: str
    default: "FEHLBERG78"
    choices: ["DOPRI5", "CASHKARP", "FEHLBERG78"]
    help: "The integrator used to propagate the SRG equations"
  SRG_SMAX:
    type: double
    default: 10.0
    help: "The end value of the integration parameter s"

PSI:
  BASIS:
    type: str
    default: ""
    help: "The primary basis set"
  BASIS_RELATIVISTIC:
    type: str
    default: ""
    help: "The basis set used to run relativistic computations"
  DF_INTS_IO:
    type: str
    default: "NONE"
    choices: ["NONE", "SAVE", "LOAD"]
    help: "IO caching for CP corrections"
  DF_BASIS_MP2:
    type: str
    default: ""
    help: "Auxiliary basis set for density fitting computations"
  INTS_TOLERANCE:
    type: double
    default: 1.0e-12
    help: "Schwarz screening threshold"
  DF_FITTING_CONDITION:
    type: double
    default: 1.0e-10
    help: "Eigenvalue threshold for RI basis"
  CHOLESKY_TOLERANCE:
    type: double
    default: 1.0e-6
    help: "Tolerance for Cholesky integrals"

GAS:
  GAS1MAX:
    type: int_list
    default: []
    help: "The maximum number of electrons in GAS1 for different states"
  GAS1MIN:
    type: int_list
    default: []
    help: "The minimum number of electrons in GAS1 for different states"
  GAS2MAX:
    type: int_list
    default: []
    help: "The maximum number of electrons in GAS2 for different states"
  GAS2MIN:
    type: int_list
    default: []
    help: "The minimum number of electrons in GAS2 for different states"
  GAS3MAX:
    type: int_list
    default: []
    help: "The maximum number of electrons in GAS3 for different states"
  GAS3MIN:
    type: int_list
    default: []
    help: "The minimum number of electrons in GAS3 for different states"
  GAS4MAX:
    type: int_list
    default: []
    help: "The maximum number of electrons in GAS4 for different states"
  GAS4MIN:
    type: int_list
    default: []
    help: "The minimum number of electrons in GAS4 for different states"
  GAS5MAX:
    type: int_list
    default: []
    help: "The maximum number of electrons in GAS5 for different states"
  GAS5MIN:
    type: int_list
    default: []
    help: "The minimum number of electrons in GAS5 for different states"
  GAS6MAX:
    type: int_list
    default: []
    help: "The maximum number of electrons in GAS6 for different states"
  GAS6MIN:
    type: int_list
    default: []
    help: "The minimum number of electrons in GAS6 for different states"

DMRG:
  DMRG_SWEEP_STATES:
    type: int_list
    default: []
    help: "Number of reduced renormalized basis states kept during successive DMRG instructions"
  DMRG_SWEEP_MAX_SWEEPS:
    type: int_list
    default: []
    help: "Max number of sweeps to stop an instruction during successive DMRG instructions"
  DMRG_SWEEP_ENERGY_CONV:
    type: double_list
    default: []
    help: "Energy convergence to stop an instruction during successive DMRG instructions"
  DMRG_SWEEP_NOISE_PREFAC:
    type: double_list
    default: []
    help: "The noise prefactors for successive DMRG instructions"
  DMRG_SWEEP_DVDSON_RTOL:
    type: double_list
    default: []
    help: "The residual tolerances for the Davidson diagonalization during DMRG instructions"
  DMRG_PRINT_CORR:
    type: bool
    default: False
    help: "Whether or not to print the correlation functions after the DMRG calculation"

BLOCK2:
  BLOCK2_STACK_MEM:
    type: double
    default: 2.0
    help: "DMRG stack memory (in GB)"
  BLOCK2_SWEEP_ENERGY_CONV:
    type: double
    default: 1E-8
    help: "DMRG energy convergence threshold"
  BLOCK2_INITIAL_GUESS:
    type: double
    default: -1
    help: "Shift (0 ~ 1) of occupation number for DMRG initial guess. -1 = random initial guess"
  BLOCK2_CUTOFF:
    type: double
    default: 1E-20
    help: "Cutoff for MPS bond dimension"
  BLOCK2_SPIN_ADAPTED:
    type: bool
    default: True
    help: "Whether to use spin-adapted DMRG for restricted integrals"
  BLOCK2_SINGLET_EMBEDDING:
    type: bool
    default: True
    help: "Whether to use singlet embedding for non-singlet states"
  BLOCK2_N_TOTAL_SWEEPS:
    type: int
    default: 16
    help: "Max number of DMRG sweeps"
  BLOCK2_SWEEP_N_SWEEPS:
    type: int_list
    default: []
    help: "Number of sweeps used for one instruction during DMRG sweeps"
  BLOCK2_SWEEP_BOND_DIMS:
    type: int_list
    default: []
    help: "MPS bond dimension used for one instruction during DMRG sweeps"
  BLOCK2_SWEEP_NOISES:
    type: double_list
    default: []
    help: "Noise used for one instruction during DMRG sweeps"
  BLOCK2_SWEEP_DAVIDSON_TOLS:
    type: double_list
    default: []
    help: "The residual tolerances for the Davidson diagonalization used for one instruction during DMRG sweeps"
  BLOCK2_VERBOSE:
    type: int
    default: 2
    help: "Level of verbosity for DMRG calculations"
  BLOCK2_RDM_LOW_MEM_ALG:
    type: bool
    default: True
    help: "Whether to use low memory algorithm to compute RDMs"



DEPRECATED:
  CASSCF_MAXITER:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_MAXITER"
  CASSCF_MICRO_MAXITER:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_MICRO_MAXITER"
  CASSCF_MICRO_MINITER:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_MICRO_MINITER"
  CASSCF_E_CONVERGENCE:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_E_CONVERGENCE"
  CASSCF_G_CONVERGENCE:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_G_CONVERGENCE"
  CASSCF_DEBUG_PRINTING:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_DEBUG_PRINTING"
  CASSCF_NO_ORBOPT:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_NO_ORBOPT"
  CASSCF_INTERNAL_ROT:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_INTERNAL_ROT"
  CASSCF_ZERO_ROT:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_ZERO_ROT"
  CASSCF_FINAL_ORBITAL:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_FINAL_ORBITAL"
  CASSCF_CI_SOLVER:
    type: deprecated
    default: None
    help: "Since version 0.4.0, the CI solver for MCSCF is selected with the ACTIVE_SPACE_SOLVER option. If you want to use another solver, you might have to modify your input to contain two forte calls."
  CASSCF_CI_FREQ:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_CI_FREQ"
  CASSCF_REFERENCE:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_REFERENCE"
  CASSCF_MULTIPLICITY:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_MULTIPLICITY"
  CASSCF_SOSCF:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_SOSCF"
  CASSCF_MAX_ROTATION:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_MAX_ROTATION"
  CASSCF_ORB_ORTHO_TRANS:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_ORB_ORTHO_TRANS"
  CASSCF_DO_DIIS:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_DO_DIIS"
  CASSCF_DIIS_MIN_VEC:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_DIIS_MIN_VEC"
  CASSCF_DIIS_MAX_VEC:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_DIIS_MAX_VEC"
  CASSCF_DIIS_START:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_DIIS_START"
  CASSCF_DIIS_FREQ:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_DIIS_FREQ"
  CASSCF_DIIS_NORM:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_DIIS_NORM"
  CASSCF_CI_STEP:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_CI_STEP"
  CASSCF_CI_STEP_START:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_CI_STEP_START"
  CASSCF_ACTIVE_FROZEN_ORBITAL:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_ACTIVE_FROZEN_ORBITAL"
  CASSCF_DIE_IF_NOT_CONVERGED:
    type: deprecated
    default: None
    help: "Replaced by MCSCF_DIE_IF_NOT_CONVERGED"