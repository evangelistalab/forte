#! Generated using commit GITCOMMIT

import forte

r_c2h4_pt2  =  -78.0814423716
r_super_pt2 = -192.3820367174

molecule C2H4{
0 1
C
H 1 rCH
H 1 rCH 2 aHCH
C 1 rCC 2 aHCC 3 180.0
H 4 rCH 1 aHCC 2   0.0
H 4 rCH 1 aHCC 3   0.0

symmetry c1
}

molecule H2CO{
0 1
O
C 1 rCO
H 2 rCH1 1 aHCO
H 2 rCH1 1 aHCO 3 180.0

symmetry c1
}

molecule supermol{
0 1
C
H 1 rCH
H 1 rCH 2 aHCH
C 1 rCC 2 aHCC 3 180.0
H 4 rCH 1 aHCC 2   0.0
H 4 rCH 1 aHCC 3   0.0

O 6 rinf 4 180.0 3 0.0
C 7 rCO 6 55.0 2 35.0
H 8 rCH1 7 aHCO 5 75.0
H 8 rCH1 7 aHCO 9 180.0

symmetry c1
}

from math import sqrt, pi, atan

# geometry parameters for C2H4
zC = 0.668188
zH = 1.238289
yH = 0.923274
rCH = sqrt(yH**2 + (zH - zC)**2)
rCC = 2.0 * zC
aHCC = 90.0 + atan((zH - zC) / yH) * 180 / pi
aHCH = 360.0 - 2.0 * aHCC

C2H4.rCH = rCH
C2H4.rCC = rCC
C2H4.aHCC = aHCC
C2H4.aHCH = aHCH

supermol.rCH = rCH
supermol.rCC = rCC
supermol.aHCC = aHCC
supermol.aHCH = aHCH

# geometry parameters for H2CO
y = 0.934473
z = 0.588078
rCO = 1.221104
rCH1 = sqrt(z**2 + y**2)
aHCO = 90.0 + atan(z / y) * 180.0 / pi

H2CO.rCO = rCO
H2CO.rCH1 = rCH1
H2CO.aHCO = aHCO

supermol.rCO = rCO
supermol.rCH1 = rCH1
supermol.aHCO = aHCO

# separation between C2H4 and H2CO
supermol.rinf = 5000.0

# general setting for scf
set global{
  reference        rhf
  scf_type         df
  basis            def2-tzvp
  df_basis_scf     def2-tzvp-jkfit
  df_basis_mp2     def2-tzvp-jkfit
  e_convergence    10
  d_convergence    13
  maxiter          100
}

# general setting of forte
set forte{
  job_type           active-dsrgpt2
  int_type           df
  dsrg_s             0.5
  dl_maxiter         500
  e_convergence      13
  active_space_solver           cas
  fcimo_actv_type    cisd
  internal_amp       singles_doubles
}

# H2CO ground state
activate(H2CO)
set forte {
  frozen_docc        [2]
  restricted_docc    [4]
  active             [3]
  nrootpi            [1]
}
Eh2co_0 = energy('forte')

set forte {
  frozen_docc        [2]
  restricted_docc    [3]
  active             [9]
  nrootpi            [1]
}
Eh2co_1 = energy('forte')
compare_values(Eh2co_0, Eh2co_1, 8, "active independence for H2CO S0")

# C2H4 pi to pi*
clean()
activate(C2H4)
set forte {
  frozen_docc        [2]
  restricted_docc    [4]
  active             [3]
  nrootpi            [2]
}
Ec2h4 = energy('forte')

# supermolecule for C2H4 pi to pi*
clean()
activate(supermol)
set forte {
  frozen_docc        [4]
  restricted_docc    [8]
  active             [6]
  nrootpi            [3]
}
Esuper = energy('forte')

Eerror = Esuper - Eh2co_1 - Ec2h4
compare_values(Eerror, 0.0, 8, "size-intensive error for C2H4 pi->pi*")

# compare absolute energies of C2H4 pi->pi* excited state
compare_values(Ec2h4, r_c2h4_pt2, 8, "abs. energy of excited C2H4")
compare_values(Esuper, r_super_pt2, 8, "abs. energy of excited C2H4...H2CO")
