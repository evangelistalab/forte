# Test DMRG-LDSRG(2) for loading C-MPS within each amplitude update
Eref_fci_dsrg  = -384.156370559677327
Eref_dmrg_dsrg = -384.156517457750567

import forte
memory 4 gb

molecule N2S {
0 1
C                    -1.244593000000     1.402439000000     0.000000000000
C                    -2.433051000000     0.708272000000     0.000000000000
C                    -2.433051000000    -0.708272000000     0.000000000000
C                    -1.244593000000    -1.402439000000     0.000000000000
C                     0.000000000000    -0.716921000000     0.000000000000
C                     0.000000000000     0.716921000000     0.000000000000
H                    -1.242226000000     2.489450000000     0.000000000000
H                    -3.377109000000     1.245176000000     0.000000000000
H                    -3.377109000000    -1.245176000000     0.000000000000
H                    -1.242226000000    -2.489450000000     0.000000000000
C                     1.244593000000     1.402439000000     0.000000000000
C                     2.433051000000     0.708272000000     0.000000000000
H                     3.377109000000     1.245176000000     0.000000000000
C                     2.433051000000    -0.708272000000     0.000000000000
H                     3.377109000000    -1.245176000000     0.000000000000
C                     1.244593000000    -1.402439000000     0.000000000000
H                     1.242226000000    -2.489450000000     0.000000000000
H                     1.242226000000     2.489450000000     0.000000000000
units angstrom
}

set {
basis              6-31g
reference          rhf
e_convergence      1e-8
d_convergence      1e-6
scf_type           df
df_basis_scf       def2-universal-jkfit
df_basis_mp2       def2-universal-jkfit
docc               [9,6,1,1,1,2,7,7]
}
wfn = psi4.Wavefunction.from_file("wfn_cas.npy")

set forte {
int_type                   df
active_space_solver        block2
orbital_type               cholesky_active
block2_sweep_bond_dims     [100,100,100]
block2_sweep_energy_conv   1.0e-7
block2_sweep_n_sweeps      [5,5,10]
block2_n_total_sweeps      20
block2_sweep_noises        [1.0e-7,1.0e-9,0.0]
block2_sweep_davidson_tols [1e-8,1e-8,1e-9]
block2_stack_mem           2
block2_verbose             2
frozen_docc                [3,2,0,0,0,0,3,2]
restricted_docc            [6,4,0,0,0,0,4,5]
active                     [0,0,2,3,2,3,0,0]
avg_state                  [[0,1,1]]
e_convergence              1.0e-8
print                      3
correlation_solver         sa-mrdsrg
corr_level                 ldsrg2
dsrg_s                     0.5
dsrg_nivo                  true
dsrg_hbar_seq              true
dsrg_rsc_ncomm             4
#dsrg_read_amps             true
dsrg_3rdm_algorithm        direct
mcscf_reference            false  # turn off mcscf
dsrg_3rdm_block2_cps_bond_dimension 200
}
edsrg = energy("forte", ref_wfn=wfn)
compare_values(Eref_fci_dsrg, edsrg, 3, "DMRG vs CAS LDSRG(2)/CASSCF(10,10)/6-31G energy for C10H10")
compare_values(Eref_dmrg_dsrg, edsrg, 6, "DMRG-LDSRG(2)/CASSCF(10,10)/6-31G energy for C10H10")
