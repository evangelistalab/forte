# Test CASSCF natural orbitals on BO

Eref_cas = -99.575838663364948

import forte

molecule BO{
0 2
B
O 1 1.5
}

set {
  basis                  cc-pvdz
  df_basis_scf           cc-pvdz-jkfit
  df_basis_mp2           cc-pvdz-jkfit
  reference              rohf
  scf_type               df
  maxiter                300
  e_convergence          8
  d_convergence          8
  docc                   [4,0,1,1]
  socc                   [1,0,0,0]
}

set forte {
  job_type             mcscf_two_step
  subspace             []
  avas                 false
  int_type             df
  active               [4,0,2,2]
  restricted_docc      [2,0,0,0]
  active_space_solver  detci
  mcscf_g_convergence 10
  mcscf_e_convergence 10
  mcscf_diis_start    2
  mcscf_final_orbital natural
  e_convergence        10
  r_convergence        8
  d_convergence        10
}
Ecas, wfn = energy('forte', return_wfn=True)
compare_values(Eref_cas, Ecas, 9, "DF-CASSCF(9e,8o)/cc-pVDZ energy")

set forte job_type newdriver

# I just want to test the RDMs!
# - rerun a CASCI, copied from pymodule

from forte.modules import OptionsFactory, ObjectsFromPsi4
data = OptionsFactory().run()
data = ObjectsFromPsi4(ref_wfn=wfn).run(data)


#from forte.pymodule import prepare_forte_options, prepare_forte_objects

#options = prepare_forte_options()
#ref_wfn, state_weights_map, mo_space_info, scf_info, _ = forte_objects = prepare_forte_objects(options, 'FORTE', ref_wfn=wfn)
#ints = forte.make_ints_from_psi4(ref_wfn, options, mo_space_info)

state_map = forte.to_state_nroots_map(data.state_weights_map)
as_ints = forte.make_active_space_ints(data.mo_space_info, data.ints, "ACTIVE", ["RESTRICTED_DOCC"])
as_solver = forte.make_active_space_solver("FCI", state_map, data.scf_info, data.mo_space_info, data.options, as_ints)
as_solver.compute_energy()

# - now compute the 1-RDM and test the off-diagonal
rdms = as_solver.compute_average_rdms(data.state_weights_map, 1, forte.RDMsType.spin_free)
d1 = rdms.SF_G1mat()
d1.print_out()  # Let's print out and see
d1.zero_diagonal()
compare_values(0.0, d1.rms(), 8, "Natural orbitals: sufficiently small off-diagonal 1-RDM elements")
