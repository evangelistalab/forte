
    -----------------------------------------------------------------------
          Psi4: An Open-Source Ab Initio Electronic Structure Package
                               Psi4 undefined 

                         Git: Rev {fcidump_sym} 00c99be dirty


    R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,
    A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,
    R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,
    H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,
    P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,
    F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,
    J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).
    (doi: 10.1021/acs.jctc.7b00174)


                         Additional Contributions by
    P. Kraus, H. Kruse, M. H. Lechner, M. C. Schieber, R. A. Shaw,
    A. Alenaizan, R. Galvelis, Z. L. Glick, S. Lehtola, and J. P. Misiewicz

    -----------------------------------------------------------------------


    Psi4 started on: Tuesday, 07 July 2020 10:18PM

    Process ID: 86704
    Host:       CHE-FEVANGE-01I (2)
    PSIDATADIR: /Users/fevange/Source/psi4/objdir-Debug/stage/share/psi4
    Memory:     500.0 MiB
    Threads:    1
    
  ==> Input File <==

--------------------------------------------------------------------------
#! Test running a computation using integrals read from a file

import forte

reffci = -1.134690658798176

set forte {
  active_space_solver fci
  int_type            fcidump
  e_convergence       12
}

energy('forte')
compare_values(reffci, variable("CURRENT ENERGY"),9, "FCI energy") #TEST
--------------------------------------------------------------------------

Scratch directory: /tmp/

  Forte
  ----------------------------------------------------------------------------
  A suite of quantum chemistry methods for strongly correlated electrons

    git branch: fcidump - git commit: fdbbae70

  Developed by:
    Francesco A. Evangelista, Chenyang Li, Kevin P. Hannon,
    Jeffrey B. Schriber, Tianyuan Zhang, Chenxi Cai,
    Nan He, Nicholas Stair, Shuhe Wang, Renke Huang
  ----------------------------------------------------------------------------

  Size of Determinant class: 256 bits
  Preparing forte objects from a custom source
  Reading integral information from FCIDUMP file INTDUMP

  ==> MO Space Information <==

  -------------------------------
                       Ag   Sum
  -------------------------------
    FROZEN_DOCC         0     0
    RESTRICTED_DOCC     0     0
    ACTIVE              2     2
    RESTRICTED_UOCC     0     0
    FROZEN_UOCC         0     0
    Total               2     2
  -------------------------------
  Forte will use custom integrals

  ==> Integral Transformation <==

  Number of molecular orbitals:                     2
  Number of correlated molecular orbitals:          2
  Number of frozen occupied orbitals:               0
  Number of frozen unoccupied orbitals:             0
  Two-electron integral type:                  Custom


  Using Custom integrals


  Timing for freezing core and virtual orbitals:              0.000 s.

  ==> Summary of Active Space Solver Input <==

    Irrep.  Multi.(2ms)      N
    --------------------------
       Ag      1  (  0)      1
    --------------------------
    N: number of roots
    ms: spin z component
    Total number of roots:   1
    --------------------------


  ==> String Lists <==

  Number of alpha electrons     = 1
  Number of beta electrons      = 1
  Number of alpha strings       = 2
  Number of beta strings        = 2
  Timing for strings        =      0.000 s
  Timing for NN strings     =      0.000 s
  Timing for VO strings     =      0.000 s
  Timing for OO strings     =      0.000 s
  Timing for VVOO strings   =      0.000 s
  Timing for VOVO strings   =      0.000 s
  Timing for 1-hole strings =      0.000 s
  Timing for 2-hole strings =      0.000 s
  Timing for 3-hole strings =      0.000 s
  Total timing              =      0.000 s

  ==> FCI Solver <==

    Number of determinants                           4
    Symmetry                                         0
    Multiplicity                                     1
    Number of roots                                  1
    Target root                                      0
    Trial vectors per root                          10

  Allocating memory for the Hamiltonian algorithm. Size: 2 x 2 x 2.   Memory: 0.000000 GB

  ==> FCI Initial Guess <==

  ---------------------------------------------
    Root            Energy     <S^2>   Spin
  ---------------------------------------------
      0       -1.086252986722  0.000  singlet
      1       -0.542436843800  2.000  triplet
      2       -0.173904182510  0.000  singlet
      3        0.413342212555  0.000  singlet
  ---------------------------------------------
  Timing for initial guess  =      0.000 s

  Projecting out root 1

  ==> Diagonalizing Hamiltonian <==

  Energy   convergence: 1.00e-12
  Residual convergence: 1.00e-06
  -----------------------------------------------------
    Iter.      Avg. Energy       Delta_E     Res. Norm
  -----------------------------------------------------
      1       -1.134690658798  -1.135e+00  +0.000e+00
      2       -1.134690658798  +0.000e+00  +0.000e+00
  -----------------------------------------------------
  The Davidson-Liu algorithm converged in 3 iterations.

  ==> Root No. 0 <==

    20      0.99230339
    02     -0.12383046

    Total Energy:        -1.134690658798176

  ==> Energy Summary <==

    Multi.(2ms)  Irrep.  No.               Energy
    ---------------------------------------------
       1  (  0)    Ag     0       -1.134690658798
    ---------------------------------------------

  Time to prepare integrals:        0.000 seconds
  Time to run job          :        0.002 seconds
  Total                    :        0.002 seconds    FCI energy........................................................PASSED

    Psi4 stopped on: Tuesday, 07 July 2020 10:18PM
    Psi4 wall time for execution: 0:00:00.06

*** Psi4 exiting successfully. Buy a developer a beer!
