# DF-DSRG-MRPT2 gradient on N2
import forte

ref_grad = psi4.Matrix.from_list([
      [0.000000000000,     0.000000000000,     0.048403195325],
      [0.000000000000,     0.000000000000,    -0.048403195325]
      ])

molecule {
0 1
N
N 1 1.1
}

set {
  basis                cc-pcvdz
  reference            rohf
  scf_type             df
  e_convergence        10
  d_convergence        10
  restricted_docc      [ 2,  0,  0,  0, 0, 2,  0, 0]
  active               [ 1,  0,  1,  1, 0, 1,  1, 1]
  mcscf_type           df
  mcscf_maxiter        100
  mcscf_diis_start     20
  mcscf_e_convergence  10
  mcscf_r_convergence  8
  g_convergence        gau_verytight
}

set forte {
  ref_type             casscf
  #                     Ag B1g B2g B3g Au B1u B2u B3u
  restricted_docc      [ 2,  0,  0,  0, 0, 2,  0, 0]
  active               [ 1,  0,  1,  1, 0, 1,  1, 1]
  active_space_solver  cas
  correlation_solver   dsrg-mrpt2
  dsrg_s               1.0
  int_type             df
  df_basis_scf         cc-pvdz-jkfit
  df_basis_mp2         cc-pvdz-jkfit
}

set df_basis_scf cc-pvdz-jkfit
set df_basis_mp2 cc-pvdz-jkfit

grad = gradient('forte')
compare_matrices(ref_grad, grad, 6, "DF-DSRG-MRPT2/CAS(6,6) gradient on N2")
