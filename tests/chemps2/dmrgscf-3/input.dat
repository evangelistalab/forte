# larger DMRG-SCF(10,10) on ground-state naphthlanene

import forte
memory 2 gb

ref_scf = -383.072740036121445
ref_cas = -383.196302854835267

molecule naphthlanene {
H   1.240557   2.492735   0.000000
H  -1.240557  -2.492735   0.000000
H  -1.240557   2.492735   0.000000
H   1.240557  -2.492735   0.000000
H   3.377213   1.246082   0.000000
H  -3.377213  -1.246082   0.000000
H  -3.377213   1.246082   0.000000
H   3.377213  -1.246082   0.000000
C   0.000000   0.716253   0.000000
C   0.000000  -0.716253   0.000000
C   1.241539   1.403577   0.000000
C  -1.241539  -1.403577   0.000000
C  -1.241539   1.403577   0.000000
C   1.241539  -1.403577   0.000000
C   2.432418   0.707325   0.000000
C  -2.432418  -0.707325   0.000000
C  -2.432418   0.707325   0.000000
C   2.432418  -0.707325   0.000000
}

set globals {
docc          [9,6,1,1,1,2,7,7]
basis         def2-svp
scf_type      df
df_basis_scf  def2-universal-jkfit
e_convergence 1e-12
d_convergence 1e-8
}
escf, wfn = energy('scf', return_wfn=True)
compare_values(ref_scf, escf, 8, "DF-RHF/def2-SVP Energy")

set forte {
int_type                  df
job_type                  mcscf_two_step
restricted_docc           [9,6,0,0,0,0,7,7]
active                    [0,0,2,3,2,3,0,0]
casscf_ci_solver          dmrg
dmrg_sweep_states         [  200,  500, 1000,  2000 ]
dmrg_sweep_energy_conv    [ 1e-6, 1e-8, 1e-8, 1e-10 ]
dmrg_sweep_max_sweeps     [    5,    5,    5,   100 ]
dmrg_sweep_noise_prefac   [ 0.03, 0.03, 0.03,   0.0 ]
dmrg_sweep_dvdson_rtol    [ 1e-6, 1e-6, 1e-6,  1e-8 ]
}
edmrg = energy('forte', ref_wfn=wfn)
compare_values(ref_cas, edmrg, 8, "DMRG-SCF(10,10)/def2-SVP Energy")
