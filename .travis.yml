language: cpp
sudo: false
matrix:
  include:
    - env:
      - PYTHON_VER='3.7'
      - MAX_DET_ORB=64
    - env:
      - PYTHON_VER='3.7'
      - MAX_DET_ORB=128

install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q -n tenv python=$PYTHON_VER gcc_linux-64 gxx_linux-64 gfortran_linux-64 cmake mkl-devel hdf5 psi4=1.4a2.dev208 psi4-dev ci-psi4 boost -c psi4/label/dev
  - source activate tenv
  - conda install pytest pytest-cov codecov lcov -c conda-forge
  - pip install pytest-shutil
  
before_script:
  - python -V
  - psi4 --version
  - psi4 --plugin-compile
# - cp ${TRAVIS_BUILD_DIR}/travis/TargetHDF5Targets.cmake ${HOME}/miniconda/envs/tenv/share/cmake/TargetHDF5/TargetHDF5Targets.cmake 
  - cp ${TRAVIS_BUILD_DIR}/travis/TargetLAPACKTargets.cmake ${HOME}/miniconda/envs/tenv/share/cmake/TargetLAPACK/TargetLAPACKTargets.cmake
# # Compile ambit
# - cd ${HOME}/build
# - pwd
# - git clone https://github.com/jturney/ambit.git ambit
# - cd ambit
# - cmake -H. -Bobjdir -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/home/travis/build/ambit-bin -DPYTHON_EXECUTABLE=${HOME}/miniconda/envs/tenv/bin/python
# - cd objdir
# - make -j2
# - make install
  - cd ${TRAVIS_BUILD_DIR}
  - PYBIND_INCLUDE=$(python -m pybind11 --includes)
  - echo $PYBIND_INCLUDE
  - >
      cmake -H. -B.
      -C${HOME}/miniconda/envs/tenv/share/cmake/psi4/psi4PluginCache.cmake
      -Dambit_DIR=/home/travis/build/ambit-bin/share/cmake/ambit/
      -DCMAKE_BUILD_TYPE=Debug 
      -DCMAKE_CXX_FLAGS="-I${HOME}/miniconda/envs/tenv/include ${PYBIND_INCLUDE}"
      -DPYTHON_EXECUTABLE=${HOME}/miniconda/envs/tenv/bin/python
      -DENABLE_CODECOV=ON
      -DMAX_DET_ORB=${MAX_DET_ORB}
  - make -j2
  - export PYTHONPATH="${HOME}/build/evangelistalab:$PYTHONPATH"

script:
  - cd ${TRAVIS_BUILD_DIR}
  - bash tools/forte_codecov
  # Run tests for 128-bit determinants 
  - if [ "$MAX_DET_ORB" -ge "128" ]; then
     cd ${HOME}/build/evangelistalab/forte/tests/large_det;
     python run_forte_tests.py --bw --failed_dump;
    fi
  - cd ${TRAVIS_BUILD_DIR}
#  - ./forte_tests
#  - ./forte_benchmarks
  - cd ${TRAVIS_BUILD_DIR}/tests/pytest
  - pytest
