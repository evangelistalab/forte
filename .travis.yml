os: osx
language: cpp
osx_image: xcode12
jobs:
  include:
    - env:
      - PYTHON_VER=3.7
      - MAX_DET_ORB=64
      - RUN_TESTS=1
    - env:
      - PYTHON_VER=3.7
      - MAX_DET_ORB=128
      - RUN_TESTS=1
    - env:
      - PYTHON_VER=3.7
      - MAX_DET_ORB=128
      - RUN_TESTS=0

install:
  - ls /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/
  - cd /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/
  - ln -s MacOSX.sdk/ MacOSX10.11.sdk
  - cd $HOME
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q -n tenv python=$PYTHON_VER psi4 psi4-dev -c psi4/label/dev
  - source activate tenv
  - conda install boost pybind11 pymdi pytest pytest-xdist pytest-shutil pytest-cov codecov lcov -c conda-forge
  - export PATH="$HOME/miniconda/envs/tenv/bin:$PATH"
  - export LD_LIBRARY_PATH="$HOME/miniconda/envs/tenv/lib:$LD_LIBRARY_PATH"
  - export MKLROOT=${HOME}/miniconda/envs/tenv
  - ls ${HOME}/miniconda/envs/tenv/bin
  - ls ${HOME}/miniconda/envs/tenv/lib

before_script:
  - python --version
# - cp ${TRAVIS_BUILD_DIR}/travis/TargetHDF5Targets.cmake ${HOME}/miniconda/envs/tenv/share/cmake/TargetHDF5/TargetHDF5Targets.cmake
# - cp ${TRAVIS_BUILD_DIR}/travis/TargetLAPACKTargets.cmake ${HOME}/miniconda/envs/tenv/share/cmake/TargetLAPACK/TargetLAPACKTargets.cmake
  # Compile psi4
# - cd ${HOME}/build
# - git clone https://github.com/psi4/psi4.git psi4
# - cd psi4
# - >
#     cmake -H. -Bobjdir
#     -DCMAKE_BUILD_TYPE=Debug
#     -DPYTHON_EXECUTABLE=${HOME}/miniconda/envs/tenv/bin/python
#     -DMAX_AM_ERI=4
#     -DBUILD_SHARED_LIBS=ON
#     -DCMAKE_INSTALL_PREFIX=${HOME}/build/psi4-bin
# - ls objdir
# - cd objdir
# - make -j2
# - make install >& psi4_install.log
# - export PATH="$HOME/build/psi4-bin/bin:$PATH"
  - psi4 --version
  - psi4 --plugin-compile
  # Compile ambit
# - cd ${HOME}/build
# - pwd
# - git clone https://github.com/jturney/ambit.git ambit
# - cd ambit
# - head -n 25 CMakeLists.txt
# - >
#     cmake -H. -Bobjdir
#     -DCMAKE_C_COMPILER=${HOME}/miniconda/envs/tenv/bin/clang
#     -DCMAKE_CXX_COMPILER=${HOME}/miniconda/envs/tenv/bin/clang++
#     -DOpenMP_LIBRARY_DIRS=${HOME}/miniconda/envs/tenv/lib
#     -DCMAKE_CXX_FLAGS="-stdlib=libc++"
#     -DOpenMP_CXX_FLAG="-fopennmp=libiomp5"
#     -DCMAKE_BUILD_TYPE=Debug
#     -DCMAKE_INSTALL_PREFIX=${HOME}/miniconda/envs/tenv
#     -DPYTHON_EXECUTABLE=${HOME}/miniconda/envs/tenv/bin/python
# - cd objdir
# - make -j2
# - make install
  # Compile Forte
  - cd ${TRAVIS_BUILD_DIR}
  - PYBIND_INCLUDE=$(python -m pybind11 --includes)
  - echo $PYBIND_INCLUDE
  - >
      cmake -H. -B.
      -C${HOME}/miniconda/envs/tenv/share/cmake/psi4/psi4PluginCache.cmake
      -DCMAKE_PREFIX_PATH=${HOME}/miniconda/envs/tenv
      -DPYTHON_EXECUTABLE=${HOME}/miniconda/envs/tenv/bin/python
      -DCMAKE_C_COMPILER=${HOME}/miniconda/envs/tenv/bin/clang
      -DCMAKE_CXX_COMPILER=${HOME}/miniconda/envs/tenv/bin/clang++
      -DOpenMP_LIBRARY_DIRS=${HOME}/miniconda/envs/tenv/lib
      -DCMAKE_CXX_FLAGS="-stdlib=libc++"
      -DOpenMP_CXX_FLAG="-fopennmp=libiomp5"
      -Dambit_DIR=${HOME}/miniconda/envs/tenv/share/cmake/ambit
      -DCMAKE_BUILD_TYPE=Debug
      -DENABLE_CODECOV=ON
      -DMAX_DET_ORB=${MAX_DET_ORB}
  - make -j2 VERBOSE=1
  - export PYTHONPATH="${HOME}/build/evangelistalab:$PYTHONPATH"

script:
  - cd ${TRAVIS_BUILD_DIR}
  - if [ "$RUN_TESTS" -eq "1" ]; then
     bash tools/forte_codecov;
     cd ${TRAVIS_BUILD_DIR}/tests/pytest;
     pytest;
    fi
  # Run tests for 128-bit determinants
  - if [ "$RUN_TESTS" -eq "0" ]; then
     cd ${HOME}/build/evangelistalab/forte/tests/large_det;
     python run_forte_tests.py --bw --failed_dump;
    fi
#  - cd ${TRAVIS_BUILD_DIR}
#  - cd ${TRAVIS_BUILD_DIR}/tests/pytest
#  - pytest
